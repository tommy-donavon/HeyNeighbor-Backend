version: "3"

services:
  consul:
    image: consul:latest
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
  nginx-data:
    build:
      context: ./nginx
      dockerfile: Dockerfile
  gateway:
    image: seges/nginx-consul:1.9.0
    container_name: gateway
    volumes_from:
      - nginx-data
    ports:
      - 8080:80
  postgresdb:
    image: postgres:latest
    container_name: postgresdb
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - APP_DB_USER=admin
      - APP_DB_PASS=${POSTGRES_PASSWORD}
      - APP_DB_NAME=users
      - APP_TWO_DB_NAME=maintenance
    ports:
      - "5438:5432"
    volumes:
      - ./postgres/config:/docker-entrypoint-initdb.d/
  account-service:
    image: meaty/accountapi
    build:
      context: ./account-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DSN=host=postgresdb user=admin password=${POSTGRES_PASSWORD} dbname=users port=5432 sslmode=disable
      - PORT=:8080
      - CONSUL_HTTP_ADDR=consul:8500
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - postgresdb
  maintenance-service:
    image: meaty/maintenanceapi
    build:
      context: ./maintenance-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DSN=host=postgresdb user=admin password=${POSTGRES_PASSWORD} dbname=maintenance port=5432 sslmode=disable
      - PORT=:8080
      - CONSUL_HTTP_ADDR=consul:8500
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - postgresdb
  mongodb:
    image: "mongo:latest"
    container_name: "mongodb"
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=root-db
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
    ports:
      - "27017-27019:27017-27019"
    volumes:
      - ./mongodb/prop.init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  property-service:
    image: meaty/propertyapi
    build:
      context: ./property-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - PORT=:8080
      - MONGO_URI=mongodb://admin:pass@mongodb:27017/property-db
      - MONGO_DB=property-db
      - CONSUL_HTTP_ADDR=consul:8500
    ports:
      - 8080
    depends_on:
      - "mongodb"
      - "consul"
  chat-service:
    image: meaty/chatapi
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - PORT=8080
      - REDIS_HOST=chat-redis-store
      - REDIS_PORT=6379
      - CONSUL_HTTP_ADDR=consul:8500
      - MONGO_URI=mongodb://admin:pass@mongodb:27017/property-db
    ports:
      - 8080
    depends_on:
      - "chat-redis-store"
      - "consul"
  chat-redis-store:
    image: redis:alpine
    container_name: chat-redis-store
    hostname: chat-redis-store
    ports:
      - 6379:6379

  # message-broker:
  #   image: rabbitmq:3-management
  #   container_name: message-broker
  #   hostname: rabbit
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
